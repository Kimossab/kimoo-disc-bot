# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Create Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 17.x, 18.x, 19.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: |
          npm ci
          npm run build
        name: Build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: node-v${{ matrix.node-version }}-release
          path: |
            build
            package.json

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v3
      name: Zip artifact for deployment 
        run: |
         zip node-v16.x-release.zip ./node-v16.x-release -r
         zip node-v17.x-release.zip ./node-v17.x-release -r
         zip node-v18.x-release.zip ./node-v18.x-release -r
         zip node-v19.x-release.zip ./node-v19.x-release -r
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "*.zip"

        # - name: Create Release
        #   id: create_release
        #   uses: actions/create-release@v1
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   with:
        #     tag_name: ${{ github.ref }}
        #     release_name: Release ${{ github.ref }}
        #     draft: false
        #     prerelease: false

        # - name: Upload Release Asset
        #   id: upload-release-asset
        #   uses: actions/upload-release-asset@v1
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   with:
        #     upload_url: ${{ steps.create_release.outputs.upload_url }}
        #     asset_path: ./node-v${{ matrix.node-version }}-release.zip
        #     asset_name: node-v${{ matrix.node-version }}-release.zip
        #     asset_content_type: application/zip
